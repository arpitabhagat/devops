/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.City_List;
import model.Community;
import model.Community_List;
import model.Hospital;
import model.Hospital_List;
import model.House;
import model.House_List;

/**
 *
 * @author aksha
 */
public class OLD_HouseDirJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HouseDirJPanel
     */
    
    
    City city;
    City_List city_list;
    
    Community community;
    Community_List community_list;
    
    House house;
    House_List house_list;
    
    
    public OLD_HouseDirJPanel(House_List list1, Community_List list2, City_List list3) {
        initComponents();
        this.house_list = list1;
        this.community_list = list2;
        this.city_list = list3;
        
        populateTable1();
        populateTable3();
        
        jTable3.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent e){
            populateTable2();
        }
    });
        
        
        //populateTable2();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Add House");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Community");

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HOUSE DIRECTORY");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "House", "Community", "City"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("City");

        jLabel3.setText("House");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Community"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "City"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jButton4))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1 = jTable3.getSelectedRow();
        
        if(selectedRowIndex1 < 0){
            JOptionPane.showMessageDialog(this, "Please select a city");
            return;
        }
        
        
        
        int selectedRowIndex2 = jTable2.getSelectedRow();
        
        if(selectedRowIndex2 < 0){
            JOptionPane.showMessageDialog(this, "Please select a community");
            return;
        }
        
        
        
        House ho = house_list.addNewHouse();
        
        ho.setHouse(jTextField1.getText());
        
        DefaultTableModel model1 = (DefaultTableModel) jTable3.getModel();

        ho.setCity(model1.getValueAt(selectedRowIndex1, 0).toString());
        
        
        
        
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();

        ho.setCommunity(model2.getValueAt(selectedRowIndex2, 0).toString());
        
        
        
        
        
        JOptionPane.showMessageDialog(this, "New house added.");
        
        jTextField1.setText("");
        
        populateTable1();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTable1.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //Community selectedCommunity = (Community)model.getValueAt(selectedRowIndex, 0);
        
        //community_list.deleteCommunity(selectedCommunity);
        String value1 = model.getValueAt(selectedRowIndex, 0).toString();
        String value2 = model.getValueAt(selectedRowIndex, 1).toString();
        String value3 = model.getValueAt(selectedRowIndex, 2).toString();
        
        
        House_List newList = new House_List();
        newList.setList(this.house_list.getList());
        
        for(House co:newList.getList()) {
            if(co.getHouse().equals(value1) && co.getCommunity().equals(value2) && co.getCity().equals(value3)) {
                house_list.deleteHouse(co);
                break;
            }else{
                continue;
            }
            
        }
        
        JOptionPane.showMessageDialog(this, "House deleted.");
        //JOptionPane.showMessageDialog(this, model.getValueAt(selectedRowIndex, 0));
        
        populateTable1();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTable1.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String value = model.getValueAt(selectedRowIndex, 0).toString();
        String value2 = model.getValueAt(selectedRowIndex, 1).toString();
        String value3 = model.getValueAt(selectedRowIndex, 2).toString();
        
        for(House ho:this.house_list.getList()) {
            if(ho.getHouse().equals(value) && ho.getCommunity().equals(value2) && ho.getCity().equals(value3)) {
                ho.setHouse(jTextField1.getText());
                DefaultTableModel model2 = (DefaultTableModel) jTable3.getModel();
                int selectedRowIndex2 = jTable3.getSelectedRow();
                ho.setCity(model2.getValueAt(selectedRowIndex2, 0).toString());
                DefaultTableModel model3 = (DefaultTableModel) jTable2.getModel();
                int selectedRowIndex3 = jTable2.getSelectedRow();
                ho.setCommunity(model3.getValueAt(selectedRowIndex3, 0).toString());
                break;
            }else{
                continue;
            }
            
        }
        

        JOptionPane.showMessageDialog(this, "Record updated.");
        
        populateTable1();
    }//GEN-LAST:event_jButton4ActionPerformed


    
    private void populateTable1() {
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(House ho : house_list.getList()){
            
            Object[] row = new Object[3];
            row[0] = ho.getHouse();
            row[1] = ho.getCommunity();
            row[2] = ho.getCity();
            
            
            model.addRow(row);
            
        }
    }
        
    private void populateTable3() {
        
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0);
        
        for(City ci : city_list.getList()){
            
            Object[] row = new Object[1];
            row[0] = ci.getCity();
            
            model.addRow(row);
            
        }
    }
    
    
    
    private void populateTable2() {
        
        int selectedRowIndex = jTable3.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        String city = model.getValueAt(selectedRowIndex, 0).toString();
        
        
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        model2.setRowCount(0);
        
        Object[] row = new Object[1];
        
        for(Community comm:this.community_list.getList()) {
            if(comm.getCity().matches(city)) {
                row[0] = comm.getCommunity();
                model2.addRow(row);
            }else{
                continue;
            }
            
        }
    
    }
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
