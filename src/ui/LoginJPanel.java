/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.City_List;
import model.Community;
import model.Community_List;
import model.Encounter;
import model.Encounter_History;
import model.Hospital;
import model.Hospital_List;
import model.House;
import model.House_List;
import model.Person;
import model.Person_List;
//import java.lang.System.Logging.Logger;
//import java.lang.System.Logging.Level;
import model.Main;
import model.APIforSMS;

/**
 *
 * @author aksha
 */
public class LoginJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LoginJPanel
     */
    
    City city;
    City_List city_list;
    
    Community community;
    Community_List community_list;
    
    House house;
    House_List house_list;
    
    Hospital hospital;
    Hospital_List hospital_list;
    
    Encounter encounter;
    Encounter_History encounter_history;
    
    Person person;
    Person_List person_list;
    
    public LoginJPanel(City_List city_list_i, Community_List community_list_i, House_List house_list_i, Hospital_List hospital_list_i, Encounter_History encounter_history_i, Person_List person_list_i) {
        initComponents();
        this.city_list = city_list_i;
        this.community_list = community_list_i;
        this.house_list = house_list_i;
        this.hospital_list = hospital_list_i;
        this.encounter_history = encounter_history_i;
        this.person_list = person_list_i;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        login = new javax.swing.JButton();
        designation = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        uname = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        designation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "System Admin", "Admission Admin", "Residential Admin", "Healthcare Admin", "Library Admin", "Housekeeping Officer", "Course Officer", "Student" }));

        jLabel1.setText("Designation");

        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pass)
                            .addComponent(uname)
                            .addComponent(designation, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(login)))
                .addContainerGap(349, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(45, 45, 45)
                .addComponent(login)
                .addContainerGap(215, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        char[] correctPass = new char[] {'a', 'd', 'm', 'i', 'n'};
        if(designation.getSelectedItem().equals("System Admin") && uname.getText().equals("admin") && Arrays.equals(pass.getPassword(), correctPass)){
            //this.dispose();

            JFrame_SysAdmin sysAd = new JFrame_SysAdmin(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
            sysAd.setVisible(true);

            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            topFrame.dispose();
            return;
        }
        if(designation.getSelectedItem().equals("Admission Admin") && uname.getText().equals("aadmin") && Arrays.equals(pass.getPassword(), correctPass)) {

            JFrame_AdmissionAdmin AdmAd = new JFrame_AdmissionAdmin(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
            AdmAd.setVisible(true);

            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            topFrame.dispose();

            return;
            //break;

        }

        //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");

        if(designation.getSelectedItem().equals("Housekeeping Officer") && uname.getText().equals("hofficer") && Arrays.equals(pass.getPassword(), correctPass)) {

            JFrame_H_Officer HOf = new JFrame_H_Officer(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
            HOf.setVisible(true);

            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            topFrame.dispose();

            return;
            //break;

            //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");
        }

        if(designation.getSelectedItem().equals("Course Officer") && uname.getText().equals("cofficer") && Arrays.equals(pass.getPassword(), correctPass)) {

            JFrame_C_Officer COf = new JFrame_C_Officer(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
            COf.setVisible(true);

            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            topFrame.dispose();

            return;
            //break;

        }

        //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");

        /*if(designation.getSelectedItem().equals("Student")){
            for(Person ho:this.person_list.getList()) {
                if(ho.getDesignation().equals("Student") && ho.getUsername().equals(uname.getText()) && Arrays.equals(pass.getPassword(), ho.getPassword())) {

                    OLD_StudentJFrame stud = new OLD_StudentJFrame(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
                    stud.setVisible(true);

                    JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
                    topFrame.dispose();

                    return;
                    //break;

                }else{
                    continue;
                }

                //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");
            }
        }*/

        if(designation.getSelectedItem().equals("Student") && uname.getText().equals("student") && Arrays.equals(pass.getPassword(), correctPass)) {

            JFrame_Student stud = new JFrame_Student(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
            stud.setVisible(true);

            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            topFrame.dispose();

            return;
            //break;

            //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");

        }

        if(designation.getSelectedItem().equals("Residential Admin") && uname.getText().equals("radmin") && Arrays.equals(pass.getPassword(), correctPass)) {

            JFrame_ResAdmin res = new JFrame_ResAdmin(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
            res.setVisible(true);

            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            topFrame.dispose();

            return;
            //break;
        }
        //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");

        if(designation.getSelectedItem().equals("Healthcare Admin") && uname.getText().equals("hadmin") && Arrays.equals(pass.getPassword(), correctPass)) {

            JFrame_HealthcareAdmin heal = new JFrame_HealthcareAdmin(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
            heal.setVisible(true);

            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            topFrame.dispose();

            return;
            //break;
        }
        //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");

        if(designation.getSelectedItem().equals("Library Admin") && uname.getText().equals("ladmin") && Arrays.equals(pass.getPassword(), correctPass)) {

            JFrame_LibraryAdmin libr = new JFrame_LibraryAdmin(city_list, community_list, house_list, hospital_list, encounter_history, person_list);
            libr.setVisible(true);

            JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
            topFrame.dispose();

            return;
            //break;

            //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");

            //JOptionPane.showMessageDialog(this, "Please enter valid credentials.");
        }
        else{
            JOptionPane.showMessageDialog(this, "Please enter valid credentials.");
        }
        
        
        
        
    }//GEN-LAST:event_loginActionPerformed

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> designation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField uname;
    // End of variables declaration//GEN-END:variables
}
